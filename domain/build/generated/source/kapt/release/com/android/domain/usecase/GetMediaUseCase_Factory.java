// Generated by Dagger (https://dagger.dev).
package com.android.domain.usecase;

import com.android.domain.repository.MediaRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetMediaUseCase_Factory implements Factory<GetMediaUseCase> {
  private final Provider<MediaRepository> repositoryProvider;

  public GetMediaUseCase_Factory(Provider<MediaRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetMediaUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetMediaUseCase_Factory create(Provider<MediaRepository> repositoryProvider) {
    return new GetMediaUseCase_Factory(repositoryProvider);
  }

  public static GetMediaUseCase newInstance(MediaRepository repository) {
    return new GetMediaUseCase(repository);
  }
}
