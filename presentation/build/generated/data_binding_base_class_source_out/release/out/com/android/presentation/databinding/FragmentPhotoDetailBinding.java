// Generated by view binder compiler. Do not edit!
package com.android.presentation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.presentation.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPhotoDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout detailAppBarLayout;

  @NonNull
  public final CollapsingToolbarLayout detailCollapsingToolbarLayout;

  @NonNull
  public final FloatingActionButton detailFab;

  @NonNull
  public final NestedScrollView detailNestedScrollView;

  @NonNull
  public final TextView detailTitleTextView;

  @NonNull
  public final Toolbar detailToolbar;

  @NonNull
  public final ImageView detailToolbarImageView;

  private FragmentPhotoDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout detailAppBarLayout,
      @NonNull CollapsingToolbarLayout detailCollapsingToolbarLayout,
      @NonNull FloatingActionButton detailFab, @NonNull NestedScrollView detailNestedScrollView,
      @NonNull TextView detailTitleTextView, @NonNull Toolbar detailToolbar,
      @NonNull ImageView detailToolbarImageView) {
    this.rootView = rootView;
    this.detailAppBarLayout = detailAppBarLayout;
    this.detailCollapsingToolbarLayout = detailCollapsingToolbarLayout;
    this.detailFab = detailFab;
    this.detailNestedScrollView = detailNestedScrollView;
    this.detailTitleTextView = detailTitleTextView;
    this.detailToolbar = detailToolbar;
    this.detailToolbarImageView = detailToolbarImageView;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPhotoDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPhotoDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_photo_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPhotoDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detail_app_bar_layout;
      AppBarLayout detailAppBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (detailAppBarLayout == null) {
        break missingId;
      }

      id = R.id.detail_collapsing_toolbar_layout;
      CollapsingToolbarLayout detailCollapsingToolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (detailCollapsingToolbarLayout == null) {
        break missingId;
      }

      id = R.id.detail_fab;
      FloatingActionButton detailFab = ViewBindings.findChildViewById(rootView, id);
      if (detailFab == null) {
        break missingId;
      }

      id = R.id.detail_nested_scroll_view;
      NestedScrollView detailNestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (detailNestedScrollView == null) {
        break missingId;
      }

      id = R.id.detail_title_text_view;
      TextView detailTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (detailTitleTextView == null) {
        break missingId;
      }

      id = R.id.detail_toolbar;
      Toolbar detailToolbar = ViewBindings.findChildViewById(rootView, id);
      if (detailToolbar == null) {
        break missingId;
      }

      id = R.id.detail_toolbar_image_view;
      ImageView detailToolbarImageView = ViewBindings.findChildViewById(rootView, id);
      if (detailToolbarImageView == null) {
        break missingId;
      }

      return new FragmentPhotoDetailBinding((CoordinatorLayout) rootView, detailAppBarLayout,
          detailCollapsingToolbarLayout, detailFab, detailNestedScrollView, detailTitleTextView,
          detailToolbar, detailToolbarImageView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
